classdef CountStudentsByTeacher < DatabaseAnalysis 

    methods
        % return a single word descriptor for this analysis, ignoring parameter
        % settings in param. The results will be stored as a DataTable with this
        % as the entryName
        function name = getName(da)
            name = 'countStudentsByTeacher';
        end

        % return a list of fields generated by the analysis. These need to be declared
        % ahead of time to simplify many of the caching related features.
        function [fields fieldDescriptorMap] = getFieldsAnalysis(da)
            fieldDescriptorMap = ValueMap('KeyType', 'char', 'ValueType', 'any');
            fieldDescriptorMap('nStudents') = ScalarField();

            fields = fieldDescriptorMap.keys;
        end

        function param = getCacheParam(da)
            param = [];
        end

        function views = getRequiredViews(da)
            views = { };
        end

        % return the entryName corresponding to the table in the database which this
        % analysis runs on. The DataTable with this entry name will run this analysis
        % once on each entry and map the results via a 1-1 relationship 
        function entryName = getMapsEntryName(da)
            entryName = 'teachers';
        end

        % run this analysis on the particular 
        function resultStruct = runOnEntry(da, entry, fields)
            resultStruct.nStudents = entry.classes.students.nEntries;

            close all;
            figure(1);
            plot(rand(20,10));
            da.saveFigure(gcf, 'Figure 1', 'Figure 1 Caption');
            figure(2);
            plot(rand(20,10), 'kx', 'MarkerSize', 20);
            da.saveFigure(gcf, 'Figure 2', 'Figure 2 Caption');
        end
    end

end
